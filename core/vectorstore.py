# -*- coding: utf-8 -*-
"""core_vectorstore.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mXTZ1sRC2eHuvAmixSOrzicZ9K0t33kX
"""

import os
import shutil
import uuid
from huggingface_hub import snapshot_download
from langchain.vectorstores import Chroma

def load_chroma_vectorstore(repo_id: str, embedding_model, collection_name=None):
    """
    Loads a Chroma vectorstore from a Hugging Face dataset repo with proper path handling.

    Args:
        repo_id (str): Hugging Face repo ID, e.g. 'cagatayn/munich_graph_network'.
        embedding_model: Embedding function compatible with Chroma, e.g. an E5Embedder instance.
        collection_name (str, optional): Name of the Chroma collection to use. If not provided,
                                         it will attempt to auto-detect it from the folder structure.

    Returns:
        Chroma: Instantiated Chroma vectorstore ready for querying or RAG use.

    Raises:
        FileNotFoundError: If no `chroma.sqlite3` file is found in the downloaded directory.
    """

    random_suffix = str(uuid.uuid4())[:4]
    persist_root = f"/content/vectorstores/ext_{random_suffix}"

    # Clean up (if needed)
    if os.path.exists(persist_root):
        try:
            shutil.rmtree(persist_root)
            print(f"[Standalone] Removed existing vectorstore folder to avoid Chroma lock issues.")
        except Exception as e:
            print(f"[Standalone] Could not delete old vectorstore: {e}")

    local_dir = snapshot_download(repo_id=repo_id, repo_type="dataset", local_dir=persist_root)

    for root, dirs, files in os.walk(local_dir):
        if "chroma.sqlite3" in files:
            persist_path = root
            break
    else:
        raise FileNotFoundError(f"[Standalone] No chroma.sqlite3 found under {local_dir}")

    # If collection_name not set, guess it or require passing
    if not collection_name:
        # auto-detecting to use first dir with 'chroma.sqlite3'
        collection_name = os.path.basename(root)

    vectorstore = Chroma(
        persist_directory=persist_path,
        collection_name=collection_name,
        embedding_function=embedding_model
    )
    return vectorstore